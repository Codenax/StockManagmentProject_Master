SELECT Item From Itemes WHERE CompanyID = '1';

SELECT Orders.OrderID, Customers.CustomerName
FROM Orders
INNER JOIN Customers ON Orders.CustomerID = Customers.CustomerID;

SELECT Categories.Category
FROM Categories
INNER JOIN Itemes ON  Categories.SL = Itemes.CategoryID

SELECT Itemes.Category
FROM Itemes
INNER JOIN Categories ON Itemes.ItemID = Categories.SL

SELECT DISTINCT Category FROM Itemes;

CREATE VIEW [CompanyStockIn] AS SELECT  DISTINCT Company , CategoryID,CompanyID From Itemes
SELECT  DISTINCT Company , CategoryID,CompanyID From Itemes
CREATE VIEW [CategoryStockIn] AS  SELECT  DISTINCT CategoryID, Category From Itemes
CREATE VIEW [CompanyStockIn] AS  SELECT  DISTINCT Company, CategoryID From Itemes

CREATE VIEW [ItemStockIn] AS  SELECT  DISTINCT Item, CompanyID From Itemes

SELECT  DISTINCT Item, CompanyID From Itemes



SELECT CompanyID, CategoryID,Item,  ItemID From Itemes WHERE CompanyID ='2' AND CategoryID = '1'

INSERT INTO StockIn(StockInQuantity) WHERE ItemID = '1'
VALUES('10'),

CREATE VIEW [AvailableQuantities] AS SELECT 
  ItemID,
  StockInQuantity,
   SellQuantity,
   Damage,
   Lost,               
   (StockInQuantity-(SellQuantity + Damage + Lost)) as 'AvailableQuantity'
FROM StockIn



ALTER TABLE StockIn
ADD AvailableQuantity AS (StockInQuantity-(SellQuantity + Damage + Lost)) PERSISTED

UPDATE StockIn SET StockInQuantity = StockInQuantity + 6 WHERE ItemID = 6

SELECT 
FROM StockIn

SELECT * FROM Itemes
INNER JOIN Itemes ON  Categories.SL = Itemes.CategoryID


CREATE VIEW [SearchCom_Cat] AS SELECT StockIn.Item,  StockIn.Company, StockIn.Category, StockIn.AvailableQuantity, Itemes.ReoderLevel
FROM StockIn
INNER JOIN Itemes ON StockIn.ItemID = Itemes.ItemID